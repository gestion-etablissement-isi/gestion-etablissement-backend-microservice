---
# playbook.yml
- name: Configuration des environnements Kubernetes
  hosts: localhost
  connection: local
  gather_facts: false
  vars:
    cluster_name: "{{ lookup('env', 'CLUSTER_NAME') }}"
    aws_region: "{{ lookup('env', 'AWS_REGION') | default('eu-west-3') }}"
    environment: "{{ lookup('env', 'ENVIRONMENT') | default('dev') }}"
    k8s_namespaces:
      - name: "{{ environment }}"
        labels:
          environment: "{{ environment }}"
      - name: "monitoring"
        labels:
          environment: "{{ environment }}"
      - name: "argocd"
        labels:
          environment: "{{ environment }}"

  tasks:
    - name: Vérification des dépendances
      ansible.builtin.command: which kubectl
      register: kubectl_check
      ignore_errors: true
      changed_when: false

    - name: Échec si kubectl n'est pas installé
      ansible.builtin.fail:
        msg: "kubectl n'est pas installé. Veuillez l'installer avant de continuer."
      when: kubectl_check.rc != 0

    - name: Mise à jour du kubeconfig pour AWS EKS
      ansible.builtin.command: aws eks update-kubeconfig --name {{ cluster_name }} --region {{ aws_region }}
      when: environment in ['preprod', 'prod']
      changed_when: true

    # Installation des outils et services de base
    - name: Création des namespaces
      kubernetes.core.k8s:
        state: present
        definition:
          apiVersion: v1
          kind: Namespace
          metadata:
            name: "{{ item.name }}"
            labels: "{{ item.labels }}"
      loop: "{{ k8s_namespaces }}"

    - name: Déploiement d'ArgoCD
      block:
        - name: Vérification de l'installation d'ArgoCD
          kubernetes.core.k8s_info:
            kind: Deployment
            name: argocd-server
            namespace: argocd
          register: argocd_check
          ignore_errors: true

        - name: Installation d'ArgoCD
          ansible.builtin.command: >
            kubectl apply -n argocd -f https://raw.githubusercontent.com/argoproj/argo-cd/stable/manifests/install.yaml
          when: argocd_check.resources | default([]) | length == 0
          changed_when: true

    - name: Installation des outils de monitoring
      block:
        - name: Déploiement de Prometheus
          kubernetes.core.k8s:
            state: present
            definition: "{{ lookup('template', 'templates/prometheus.yaml.j2') | from_yaml }}"
            namespace: monitoring

        - name: Déploiement de Grafana
          kubernetes.core.k8s:
            state: present
            definition: "{{ lookup('template', 'templates/grafana.yaml.j2') | from_yaml }}"
            namespace: monitoring

    # Configuration pour l'environnement local Docker (dev)
    - name: Configuration pour Dev - Docker
      block:
        - name: Vérification de Docker
          ansible.builtin.command: which docker
          register: docker_check
          ignore_errors: true
          changed_when: false

        - name: Installation du registry Docker local
          ansible.builtin.command: docker run -d -p 5000:5000 --name registry registry:2
          when:
            - docker_check.rc == 0
            - environment == 'dev'
          ignore_errors: true
          changed_when: true

        - name: Installation de Nexus
          ansible.builtin.command: >
            docker run -d -p 8081:8081 --name nexus sonatype/nexus3:latest
          when:
            - docker_check.rc == 0
            - environment == 'dev'
          ignore_errors: true
          changed_when: true

        - name: Installation de SonarQube
          ansible.builtin.command: >
            docker run -d -p 9000:9000 --name sonarqube sonarqube:latest
          when:
            - docker_check.rc == 0
            - environment == 'dev'
          ignore_errors: true
          changed_when: true
      when: environment == 'dev'